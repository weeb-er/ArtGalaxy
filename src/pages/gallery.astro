---
const images = [
  { src: '/images/Morning Ray.png', alt: 'Image 1 Description' },
  { src: '/images/Cats.png', alt: 'Image 2 Description', link: '/image-blogs/image-blog-2' },
  { src: '/images/Loving Birds.png', alt: 'Image 3 Description', link: '/image-blogs/image-blog-3' },
  { src: '/images/Romantic.png', alt: 'Image 4 Description', link: '/image-blogs/image-blog-4' },
  { src: '/images/Night Sky.png', alt: 'Image 5 Description', link: '/image-blogs/image-blog-5'}
];


// Clone first and last images for smooth infinite scroll
const clonedImages = [
  images[images.length - 1],
  ...images,
  images[0]
];

import BaseLayout from "../layouts/Layout.astro";

---

<BaseLayout title="Gallery">
  <div class="gallery-container">
    <div class="image-slider-wrapper" id="sliderWrapper">
      <button class="nav-button prev" onclick="moveSlide(-1)">&#10094;</button>

      <div class="image-slider" id="slider">
        {clonedImages.map((image, index) => (
          <a href={image.link} key={index} class="image-slide">
            <img
              src={image.src}
              alt={image.alt}
              class="image-slide-img"
            />
          </a>
        ))}
      </div>

      <button class="nav-button next" onclick="moveSlide(1)">&#10095;</button>
    </div>

    <div class="heading">
      <h1>Welcome to the Image Gallery</h1>
    </div>

    <footer class="footer">
      <p>Footer Content</p>
    </footer>
  </div>
</BaseLayout>

<style>
  .gallery-container {
    position: relative;
    width: 80vw;
    height: 70vh;
    margin: 0 auto;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .image-slider-wrapper {
    display: flex;
    position: relative;
    height: 100%;
  }

  .image-slider {
    display: flex;
    transition: transform 0.5s ease-in-out;
    height: 100%;
  }

  .image-slide {
    flex: 0 0 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
  }

  .image-slide-img {
    width: 80vw;
    height: 80vh;
    object-fit: cover;
    transition: transform 0.3s ease-in-out; /* Smooth zoom effect */
  }

  .image-slide:hover .image-slide-img {
    transform: scale(1.1); /* Zoom-in effect */
  }

  .nav-button {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(0, 0, 0, 0.5);
    color: white;
    border: none;
    padding: 10px;
    font-size: 24px;
    cursor: pointer;
    z-index: 10;
  }

  .prev { left: 10px; }
  .next { right: 10px; }

  .heading {
    text-align: center;
    margin-top: 20px;
  }

  .heading h1 {
    font-size: 2rem;
    color: #333;
  }

  .footer {
    text-align: center;
    background-color: #f1f1f1;
    padding: 10px;
  }

  /* Additional style for pausing autoplay on hover */
  .image-slider-wrapper:hover {
    cursor: pointer; /* Optional: to indicate something is interactive */
  }
</style>

<script is:client>
  let currentSlide = 1;
let imageSlider;
let totalSlides;
let isAnimating = false;
let autoplayInterval;
let autoplayRunning = false; // Track if autoplay is running

function initializeSlider() {
  imageSlider = document.getElementById('slider');
  totalSlides = imageSlider.children.length;

  imageSlider.style.transition = 'none';
  imageSlider.style.transform = `translateX(-${currentSlide * 100}%)`;
}

function moveSlide(direction) {
  if (isAnimating || !imageSlider) return;

  isAnimating = true;
  currentSlide += direction;
  imageSlider.style.transition = 'transform 0.5s ease-in-out';
  imageSlider.style.transform = `translateX(-${currentSlide * 100}%)`;

  setTimeout(() => {
    if (currentSlide === totalSlides - 1) {
      imageSlider.style.transition = 'none';
      currentSlide = 1;
      imageSlider.style.transform = `translateX(-${currentSlide * 100}%)`;
    }

    if (currentSlide === 0) {
      imageSlider.style.transition = 'none';
      currentSlide = totalSlides - 2;
      imageSlider.style.transform = `translateX(-${currentSlide * 100}%)`;
    }

    isAnimating = false;
  }, 550);
}

function startAutoplay() {
  if (!autoplayRunning) { // Check if autoplay is already running
    autoplayInterval = setInterval(() => {
      moveSlide(1);
    }, 4000);
    autoplayRunning = true;
  }
}

function stopAutoplay() {
  clearInterval(autoplayInterval);
  autoplayRunning = false;
}

window.addEventListener('load', () => {
  initializeSlider();
  startAutoplay();

  const imageSlides = document.querySelectorAll('.image-slide');

  // Pause autoplay when hovering over any image
  imageSlides.forEach(slide => {
    slide.addEventListener('mouseenter', () => {
      stopAutoplay();
    });
    slide.addEventListener('mouseleave', () => {
      startAutoplay();
    });
  });
});

</script>
